{"version":3,"sources":["app/flow/CreatePost/TextEditor.js","app/flow/CreatePost/UploadImg.js","app/flow/CreatePost/CreatePost.js","app/flow/CreatePost/CreatePostContainer.js","app/flow/CreatePost/index.js"],"names":["TextEditor","props","editorRef","useRef","React","createElement","Fragment","Editor","onInit","evt","editor","current","initialValue","onBlur","getContent","init","height","menubar","plugins","toolbar","content_style","UploadImg","_React$useState","useState","_React$useState2","_slicedToArray","images","setImages","className","ImageUploading","value","onChange","imageList","addUpdateIndex","console","log","maxNumber","dataURLKey","_ref","onImageUpload","onImageRemoveAll","onImageUpdate","onImageRemove","isDragging","dragProps","Object","assign","style","color","undefined","onClick","map","image","index","key","src","alt","width","CreatePost","_useState","_useState2","openDrawer","setOpenDrawer","_useState3","id","title","img","description","_useState4","newsContent","setNewsContent","onFieldBlur","content","newContent","_objectSpread","_defineProperty","type","defaultValue","e","target","connect","reactRedux","state","ownProps","userDetails","dispatch","bindActionCreators","actions","__webpack_exports__","Container"],"mappings":"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","file":"static/js/createPost.80ae2ab4.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\n import { Editor } from '@tinymce/tinymce-react';\r\n\r\n export default function TextEditor(props) {\r\n   const editorRef = useRef(null);\r\n   return (\r\n     <>\r\n       <Editor\r\n         onInit={(evt, editor) => editorRef.current = editor}\r\n         initialValue={props?.initialValue}\r\n         onBlur={() => props?.onBlur('description', editorRef.current.getContent())}\r\n         init={{\r\n           height: 500,\r\n           menubar: false,\r\n           plugins: [\r\n             'advlist autolink lists link image charmap print preview anchor',\r\n             'searchreplace visualblocks code fullscreen',\r\n             'insertdatetime media table paste code help wordcount'\r\n           ],\r\n           toolbar: 'undo redo | formatselect | ' +\r\n           'bold italic backcolor | alignleft aligncenter ' +\r\n           'alignright alignjustify | bullist numlist outdent indent | ' +\r\n           'removeformat | help',\r\n           content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n         }}\r\n       />\r\n     </>\r\n   );\r\n }","import React from 'react';\r\nimport ImageUploading from 'react-images-uploading';\r\n\r\nexport function UploadImg() {\r\n  const [images, setImages] = React.useState([]);\r\n  const maxNumber = 69;\r\n\r\n  const onChange = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    setImages(imageList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ImageUploading\r\n        value={images}\r\n        onChange={onChange}\r\n        maxNumber={maxNumber}\r\n        dataURLKey=\"data_url\"\r\n      >\r\n        {({\r\n          imageList,\r\n          onImageUpload,\r\n          onImageRemoveAll,\r\n          onImageUpdate,\r\n          onImageRemove,\r\n          isDragging,\r\n          dragProps,\r\n        }) => (\r\n          // write your building UI\r\n          <div className=\"upload__image-wrapper\">\r\n            <button\r\n              style={isDragging ? { color: 'red' } : undefined}\r\n              onClick={onImageUpload}\r\n              {...dragProps}\r\n            >\r\n              Click or Drop here\r\n            </button>\r\n            &nbsp;\r\n            <button onClick={onImageRemoveAll}>Remove all images</button>\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image['data_url']} alt=\"\" width=\"100\" />\r\n                <div className=\"image-item__btn-wrapper\">\r\n                  <button onClick={() => onImageUpdate(index)}>Update</button>\r\n                  <button onClick={() => onImageRemove(index)}>Remove</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ImageUploading>\r\n    </div>\r\n  );\r\n}","import React , {useState} from 'react'\r\nimport './CreatePost.scss'\r\nimport TextEditor from './TextEditor'\r\n// import ImageUploader from 'react-images-upload'\r\nimport ImageUploading from 'react-images-uploading';\r\nimport { UploadImg } from './UploadImg';\r\nfunction CreatePost() {\r\n    let defaultNewsContent = {\r\n        'id' : null,\r\n        'title' : null ,\r\n        'img' : null ,\r\n        'description' : null \r\n    }\r\n    const [openDrawer , setOpenDrawer] = useState(false)\r\n    const [newsContent , setNewsContent] = useState(defaultNewsContent)\r\n    const onFieldBlur = (key , content) => {\r\n        console.log(key , content)\r\n        let newContent = {...newsContent,[key] : content} ;\r\n        setNewsContent(newContent)\r\n    }\r\n\r\n    const onDrop = (pictureFiles , pictureDatUrl) => {\r\n        console.log(pictureFiles , pictureDatUrl)\r\n    }\r\n\r\n    const renderNews = () => {\r\n        return(\r\n            <div className='news-container'>\r\n                <div className='title-container'>\r\n                    <div className='title'>Title</div>\r\n                    <div className='title-desc'>\r\n                        <input\r\n                         type = \"text\"\r\n                         defaultValue={newsContent?.title}\r\n                         onBlur={(e) => onFieldBlur('title' , e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className= \"upload-img-container\">\r\n                    <div className='img-container'>Upload Img</div>\r\n                    {/* <ImageUploader\r\n                    withIcon={true}\r\n                    buttonText='Choose images'\r\n                    onChange={() => onDrop()}\r\n                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                    maxFileSize={5242880}\r\n                    singleImage = {true}\r\n                    /> */}\r\n                    <UploadImg />\r\n                </div>\r\n\r\n                <div className='news-desc'>\r\n                    <div className=''>Write Your News</div>\r\n                    <TextEditor\r\n                        initialValue = {newsContent?.description}\r\n                        onBlur = {(key , content) => onFieldBlur(key , content)}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n  return (\r\n    <div className='create-post-container'>\r\n        <div className='create-post'>\r\n            <button className='create-post-btn' onClick = {() => setOpenDrawer(true)}>Create New News</button>\r\n        </div>\r\n        {openDrawer && \r\n        <div className='drawer-container'>\r\n           <div className='cross-Drawer' onClick={() => setOpenDrawer(false)}>X</div>\r\n           <div className='news-content-container'>\r\n            {renderNews()}\r\n           </div>\r\n        </div>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatePost","import * as reactRedux from 'react-redux' ; \r\nimport { bindActionCreators } from 'redux';\r\nimport actions from './actionCreator' \r\nimport CreatePost from './CreatePost';\r\nexport const connect = reactRedux.connect ;\r\n\r\n\r\nexport const mapStateToProps = (state , ownProps) => {\r\n    return {\r\n        userDetails : state.userDetails\r\n    };\r\n};\r\n\r\nexport  const mapDispatchToProps = (dispatch , ownProps) => {\r\n    return {\r\n        ...bindActionCreators(actions , dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CreatePost)\r\n\r\n","import Container from './CreatePostContainer'\r\n\r\nexport default { Container }"],"sourceRoot":""}